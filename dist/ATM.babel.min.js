"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var o=t[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,a,o){return a&&e(t.prototype,a),o&&e(t,o),t}}();!function(){function e(e,t,a){o.atmTracker[e]||(o.atmTracker[e]=new r(e,t,a))}function t(t,a,r){e(t,a,r),o.atmTracker[r.trackerName].emit(a,r)}var a={VALIDATE_RULES:{piwik_emit:function(e,t){return!0},test:{requiredData:["test"],requiredOptions:[]},default_auto:{requiredData:[],requiredOptions:[]},default_emit:{requiredData:[],requiredOptions:["trigger"]}},PROCESS_RULES:{piwik_emit:function(e,t){return e},piwik_auto:[{mergeDataName:"category",mergeOptionName:"page"},{mergeDataName:"action",mergeOptionName:"trigger"},{mergeDataName:"name",mergeOptionName:"element"},{mergeDataName:"value",mergeOptionValue:1}],default_auto:function(e,t){return e},default_emit:[]},REPORT_RULES:{default_emit:function(e,t){console.log("ATM report default_emit",e)},default_auto:function(e,t){console.log("ATM report default_auto",e);var a=setInterval(function(){if("undefined"!=typeof Piwik)try{var t=Piwik.getTracker();e.value?t.trackEvent(e.page,e.trigger,e.element,e.value):t.trackEvent(e.page,e.trigger,e.element)}catch(e){console.log("piwik 尚未加载")}finally{clearInterval(a)}},200)}}},o={presetRules:{default_auto:{validateRule:a.VALIDATE_RULES.default_auto,processRule:a.PROCESS_RULES.default_auto,reportRule:a.REPORT_RULES.default_auto},default_emit:{validateRule:a.VALIDATE_RULES.default_emit,processRule:a.PROCESS_RULES.default_emit,reportRule:a.REPORT_RULES.default_emit},piwik_auto:{validateRule:a.VALIDATE_RULES.default_auto,processRule:a.PROCESS_RULES.default_auto,reportRule:a.REPORT_RULES.default_auto},google_auto:{validateRule:a.VALIDATE_RULES.default_auto,processRule:a.PROCESS_RULES.default_auto,reportRule:a.REPORT_RULES.google_auto}},atmTracker:{}},r=function(){function e(t,a,r){_classCallCheck(this,e),o.presetRules[t]?(this.validateRule=o.presetRules[t].validateRule,this.processRule=o.presetRules[t].processRule,this.reportRule=o.presetRules[t].reportRule):r[t+"options"]?r[t+"options"].validateRule&&(this.validateRule=r.validateRule)(r[t+"options"].processRule)&&(this.processRule=r.processRule)(r[t+"options"].reportRule)&&(this.reportRule=r.reportRule):(this.validateRule=r.validateRule,this.processRule=r.processRule,this.reportRule=r.reportRule)}return _createClass(e,[{key:"validateData",value:function(e,t){return console.log("ATM tracker : validateData"),this.validateRule?"function"==typeof this.validateRule?this.validateRule(e,t):"object"===_typeof(this.validateRule)?(this.validateRule.requiredData=this.validateRule.requiredData||[],this.validateRule.requiredOptions=this.validateRule.requiredOptions||[],!this.validateRule.requiredData.some(function(t){return!e[t]&&console.warn("ATM validateData: Validate NOT passed, param: data."+t),!e[t]})&&!this.validateRule.requiredOptions.some(function(e){return!t[e]&&console.warn("ATM validateData: Validate NOT passed, param: options."+e),!t[e]})):(console.warn("ATM validateData: Rule unmatched Please check your options.validateRule "),!1):(console.warn("ATM validateData: no matched validate rule, Please check your options.validateRule"),!1)}},{key:"processData",value:function(e,t){return console.log("ATM tracker : processData"),this.processRule?"function"==typeof this.processRule?this.processRule(e,t):"[object Array]"===Object.prototype.toString.call(this.processRule)?(this.processRule.forEach(function(a){void 0!==a.mergeOptionValue&&(e[a.mergeDataName]=t[a.mergeOptionValue]),void 0!==a.mergeOptionName&&(e[a.mergeDataName]=t[a.mergeOptionName])}),e):(console.warn("ATM validateData : Rule unmatched Please check your options.processRule "),!1):(console.warn("ATM validateData: no matched process rule, Please check your options.processRule"),!1)}},{key:"reportData",value:function(e,t){return console.log("ATM tracker : reportData"),this.reportRule?"function"==typeof this.reportRule?this.reportRule(e,t):(console.warn("ATM validateData: Rule unmatched Please check your options.reportRule"),!1):(console.warn("ATM reportData: no matched report rule, Please check your options.reportRule"),!1)}},{key:"emit",value:function(e,t){if(!this.validateData(e,t))return!1;var a=this.processData(e,t);a&&this.reportData(a,t)}}]),e}();o.autoCollectTrackData=function(e,t,a){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(r.trackerName=r.trackerName||"default_auto",r.validateRule=r.validateRule||"default_auto",r.processRule=r.processRule||"default_auto",r.reportRule=r.reportRule||"default_auto",r.desc=r.desc||{},r.desc={trigger:r.desc.trigger||e,page:r.desc.page||t,element:r.desc.element||a,value:r.desc.value||1},!e||!t||!a)return console.warn("ATM autoCollectTrackData: validateRule NOT passed"),!1;var l=new RegExp(t,"i"),i=window.location.href.toLowerCase();try{if(i.match(l))if("undefined"==typeof jQuery){var u=document.querySelectorAll(a);if(u){var n=Array.prototype.slice.call(u);n.forEach(function(t){t.addEventListener(e,function(){console.log(this),console.log("ATM.emitCollectingTrackData(data,options.desc), native, Event Capture"),o.emitCollectingTrackData(r.trackerName,r.desc,r)})})}}else $(a).on(e,function(){console.log(this),console.log("ATM.emitCollectingTrackData(data,options) ,jQuery ,Event Capture"),o.emitCollectingTrackData(r.trackerName,r.desc,r)})}catch(e){console.log(e)}},o.emitCollectingTrackData=function(e,a,o){if(!a&&!o)return!1;o=o||{trackerName:"default_emit"},console.log("emitCollectingTrackData",a,o),"string"==typeof o.trackerName?t(o.trackerName,a,o):"[object Array]"===Object.prototype.toString.call(o.trackerName)&&o.trackerName.forEach(function(e){t(e,a,o)})},o.setOptions=function(e){console.log("setOptions:"),console.log("options: "+e),console.log("ATM_CONFIG: "+a)},window.ATM&&console.warn("ATM Fatal Error: window.ATM already exists, Please check"),window.ATM=window.ATM||o}();
//# sourceMappingURL=ATM.babel.min.js.map
